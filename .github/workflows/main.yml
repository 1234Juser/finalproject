# .github/workflows/main.yml

name: React & Spring Boot CI/CD

on:
  push:
    branches: [ "main" ]  # main 브랜치에 push 시 실행

jobs:
  # ================= FRONTEND DEPLOYMENT =================
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install and Build
        run: |
          yarn install
          CI=false yarn run build
        env:
          # React 앱에서 사용할 백엔드 API 주소를 설정합니다.
          REACT_APP_API_URL: https://api.hellotravelogic.link

      - name: Deploy to S3
        run: aws s3 sync ./build s3://${{ secrets.S3_FRONTEND_BUCKET }} --delete

      - name: Debug CloudFront ID
        run: echo "The CloudFront ID is ->'${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}'<-"

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id "$CLOUDFRONT_ID" --paths "/*"
        env:
          CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

  # ================= BACKEND DEPLOYMENT =================
  deploy-backend:
    needs: deploy-frontend # 프론트엔드 배포가 성공해야 실행
    runs-on: ubuntu-latest
    defaults:
      run:
        # 백엔드 프로젝트가 리포지토리 루트에 있다고 가정합니다.
        working-directory: ./
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Package for CodeDeploy
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp -r scripts/ deploy/
          cd deploy && zip -r deploy.zip .

      - name: Upload to S3
        run: aws s3 cp deploy/deploy.zip s3://${{ secrets.S3_ARTIFACT_BUCKET }}/backend-deploy.zip

      - name: Trigger CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODE_DEPLOY_APP_NAME }} \
            --deployment-group-name ${{ secrets.CODE_DEPLOY_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.S3_ARTIFACT_BUCKET }},bundleType=zip,key=backend-deploy.zip