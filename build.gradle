plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hello'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    // 포트원(구 아임포트)은 maven 기반으로 의존성을 추가한다. (여기에 jitpack.io를 추가하면 gradle에서도 iamport라이브러리를 추가할 수 있다.)
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // 포트원(구 아임포트) 라이브러리
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
    //jwt토큰설정
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    //smtp build의존성
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    /* Fileupload를 위한 라이브러리 */
    implementation 'commons-io:commons-io:2.16.1'
    //소셜로그인 jsonobject
    implementation 'org.json:json:20231013'
    // 채팅 WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // WebSocket 메시징 보안을 위한 의존성 추가
    implementation 'org.springframework.security:spring-security-messaging'
    // AWS S3 서비스 사용을 위한 의존성 설정입니다.
// AWS SDK for Java v2 - BOM (Bill of Materials)을 사용하여 AWS SDK 모듈들의 버전을 관리합니다.
// BOM을 사용하면 개별 AWS SDK 모듈의 버전을 명시할 필요 없이 호환되는 버전으로 자동 관리됩니다.
// Maven Central (search.maven.org)에서 'software.amazon.awssdk bom'을 검색하여 최신 안정화된 버전을 확인할 수 있습니다.
// 2025년 5월 31일 기준으로 최신 안정화 버전으로 업데이트되었습니다.
    implementation platform('software.amazon.awssdk:bom:2.27.7')

// AWS S3 클라이언트 라이브러리입니다. 버전은 위에 선언된 BOM에 의해 관리됩니다.
    implementation 'software.amazon.awssdk:s3'

// 스프링 클라우드 핵심 기능을 사용하기 위한 BOM입니다.
// 스프링 클라우드 관련 라이브러리들의 호환되는 버전을 관리합니다.
    implementation platform("org.springframework.cloud:spring-cloud-dependencies:2024.0.1")

// Spring Cloud AWS 관련 라이브러리들의 버전을 관리하는 BOM입니다.
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.1")

// Spring Cloud AWS Secrets Manager를 사용하기 위한 라이브러리입니다.
// 이 라이브러리의 버전은 위에 선언된 Spring Cloud AWS BOM에 의해 관리됩니다.
// AWS Secrets Manager와 연동하여 애플리케이션의 비밀 정보를 안전하게 관리할 수 있도록 지원합니다.
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-parameter-store'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-config'

}


tasks.named('test') {
    useJUnitPlatform()
}